import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption

def copyDirectory(srcDir, destDir) {
    if (!Files.exists(srcDir))
        throw new IOException("${srcDir.toAbsolutePath()} does not exist. Make sure react-app has been built prior to building the Android project.")
    if (!Files.exists(destDir))
        Files.createDirectories(destDir)
    Files.walk(srcDir).forEach(srcPath -> {
        def destinationPath = Paths.get(destDir.toString(), srcDir.relativize(srcPath).toString());
        // skip copying directories that already exist
        if (!Files.exists(destinationPath) || !Files.isDirectory(destinationPath))
            Files.copy(srcPath, destinationPath, StandardCopyOption.REPLACE_EXISTING)
    })
}

task copyITMAssets {
    def reactAppDir = "${projectDir}/../../cross-platform/react-app"
    println "reactAppDir ${new File(reactAppDir).canonicalPath}"
    def assetsDir = "${projectDir}/../iTwinStarter/app/src/main/assets/ITMApplication"
    println "assetsDir ${new File(assetsDir).canonicalPath}"

    Map foldersToCopy = [
        "${reactAppDir}/build": "${assetsDir}/frontend",
        "${reactAppDir}/lib/webpack": "${assetsDir}/backend",
        "${reactAppDir}/assets/presentation_rules": "${assetsDir}/backend/assets/presentation_rules",
        "${reactAppDir}/node_modules/@itwin/presentation-backend/lib/cjs/assets/supplemental-presentation-rules": "${assetsDir}/backend/assets/supplemental_presentation_rules",
        "${reactAppDir}/node_modules/@itwin/presentation-common/lib/cjs/assets/locales": "${assetsDir}/backend/assets/locales"
    ]

    for (def entry in foldersToCopy)
        copyDirectory(Paths.get(entry.key), Paths.get(entry.value))
}
